<%
_locals.title = 'Protection plan';
_locals.nav = 'policy';
%>
<h1 class="mb-3">Your protection plan</h1>

<% if(pledgeTotal) { %>
	<div class="rounded border bg-white p-4 mb-4">
		<h3 class="heading-sm-medium mb-2">Total pledges</h3>
		<div><span class="heading-lg-medium">$<%= pledgeTotal %></span> <a class="body-sm-weak" href="/dashboard/pledges#received">View</a></div>
	</div>
<% } %>

<div id="policyForm" class="rounded border bg-white p-4">
	<div>
		<h3 class="heading-sm-weak mb-2">
			Need to make a protection plan change?
		</h3>
		<p class="body-sm-weak text-medium">You can view or edit your coverage options</p>
		<div id="savedMsg" class="alert alert-success mb-3" style="display:none">Your protection plan changes were saved.</div>
		<div class="rounded bg-neutral p-3 text-strong">
			<h3 class="body-xs-medium"><svg width="24" height="24" class="text-primary me-2"><use href="/images/ui/icons.svg#website"></use></svg>Your current protection plan</h3>
			<div style="white-space:pre-wrap;" class="body-xs-weak" id="displayPolicy"><%= policy %></div>
		</div>
		<div class="my-3">
			<a href="#" id="startEditBtn" class="text-black">Update my protection plan</a>
			<div id="editForm" style="display:none">
				<div class="form-floating">
					<textarea id="policy" class="form-control" placeholder="New protection plan" style="height:8em;"></textarea>
					<label for="policy">New protection plan</label>
				</div>
				<div class="mt-3">
					<button id="saveBtn" class="btn bg-black text-white">Save</button>
					<a href="#" id="cancelEditBtn" class="text-black ms-2">Cancel</a>
				</div>
			</div>
		</div>
	</div>
</div>

<div class="rounded border bg-white p-4 my-4">
	<h3 class="heading-sm-medium mb-2">Activate claim</h3>
	<% if (activeExecution) { %>
		<div class="alert alert-info">
			<h4>Active Policy Execution</h4>
			<p>Your policy protection was activated on <%= activeExecution.executedAt.toLocaleDateString() %></p>
			<p>Reason: <%= activeExecution.reason %></p>
			<% console.log('Template values:', activeExecution.agreeCount, activeExecution.disagreeCount) %>
			<p>Votes: <span class="text-success"><%= activeExecution.agreeCount %> agree</span> / <span class="text-danger"><%= activeExecution.disagreeCount %> disagree</span></p>
			<p>Voting period ends: <%= activeExecution.expiresAt.toLocaleDateString() %></p>
			<div class="progress mt-2">
				<div class="progress-bar" style="width: <%= ((activeExecution.expiresAt - new Date()) / (7 * 24 * 60 * 60 * 1000)) * 100 %>%"></div>
			</div>
		</div>
	<% } else { %>
		<p>Activate your pledges...</p>
		<a href="/dashboard/execute-policy" class="btn btn-primary">Activate pledges</a>
	<% } %>
</div>

<script>
	var startEditBtn = document.getElementById('startEditBtn');
	var editForm = document.getElementById('editForm');
	var displayPolicy = document.getElementById('displayPolicy');
	var policy = document.getElementById('policy');
	var saveBtn = document.getElementById('saveBtn');
	var cancelEditBtn = document.getElementById('cancelEditBtn');
	var savedMsg = document.getElementById('savedMsg');
	var savedPolicy = '<%= policy %>';

	startEditBtn.addEventListener('click', function(e) {
		e.preventDefault();
		policy.value = savedPolicy;
		editForm.style.display = 'block';
		startEditBtn.style.display = 'none';
		policy.focus();
	});

	saveBtn.addEventListener('click', function(e) {
		e.preventDefault();

		document.body.classList.add('page-loading');

		var data = new URLSearchParams([['policy', policy.value]]);

		fetch('/dashboard/policy', { method: 'post', body: data })
			.then((res) => {
				document.body.classList.remove('page-loading');
				if(res.ok) {
					savedPolicy = policy.value;
					savedMsg.style.display = 'inline-block';
					editForm.style.display = 'none';
					startEditBtn.style.display = 'inline';
					displayPolicy.textContent = savedPolicy;
				} else {
					// Display errors
					res.json().then(json => {
						for(var error of json.errors) {
							var input = document.getElementById(error.param);
							if(input) {
								input.classList.add('is-invalid');
								var errorDiv = document.createElement('div');
								errorDiv.textContent = error.msg;
								errorDiv.classList.add('invalid-feedback');
								input.after(errorDiv);
								input.addEventListener('input', function() {
									input.classList.remove('is-invalid');
									errorDiv.remove();
								});
							}
						}
					});					
				}
			});
	});

	cancelEditBtn.addEventListener('click', function(e) {
		e.preventDefault();
		editForm.style.display = 'none';
		startEditBtn.style.display = 'inline';
	});

</script>

