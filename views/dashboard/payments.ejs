<%
_locals.title = 'Payment information';
_locals.nav = 'payments';
_locals.headScripts = [ 'https://js.stripe.com/v3/' ];
%> 

<header>
	<h1 class="display-xxs">Payment information</h1>
</header>

<div class="card">
	<div class="card-body">
		<% if(authUser.roles.indexOf('creator') != -1) { %>
		<div class="row">
			<% if(creator.stripeConnectedAccountOnboarded) { %>
				<div class="col">
					<h3>Stripe</h3>
					<p class="fs-6">Your Stripe account is connected and ready to accept payouts.</p>
				</div>
			<% } else { %>
				<div class="col">
					<h3>Set up Stripe</h3>
					<p class="fs-6">Takes about 5 minutes. This is how money from supporters gets into your bank account.</p>
				</div>
				<div class="col text-end">
					<a class="btn btn-primary" href="/dashboard/payments/connect-stripe-account" id="connectStripeAccountBtn">Connect with Stripe</a>
				</div>			
			
			<% } %>
		</div>
		<hr />
		<% } %>

		<h3 class="heading-sm-weak">
			Payment history
			<a href="#" class="text-medium float-end">View payments</a>
		</h3>
		<p class="body-sm-weak text-medium">All the payments you've made and received.</p>

		<h3 class="heading-sm-weak">Payment methods</h3>

		<% if(primaryCardPaymentMethod) { %>
		<div class="rounded border white-bg my-3 p-3">
			<h3 class="body-sm-medium">Your primary payment method <a href="#" id="changePaymentMethodBtn" class="float-end">Change</a></h3>

			<div class="my-3">
				<div style="width:60px;text-align:center;padding:4.5px 0;border: 1px solid var(--border-neutral);border-radius:2px;float: left;margin-right: 8px;">
					<svg viewbox="0 0 24 24" width="36"><use href="/images/ui/credit-card-icons.svg#<%= primaryCardPaymentMethod.cardType%>"></use></svg>
				</div>

				<h3 class="body-sm-medium mb-0"><%= primaryCardPaymentMethod.nickname || camelize(primaryCardPaymentMethod.cardType) %></h3>
				<div class="body-xs-weak text-strong"><%= primaryCardPaymentMethod.last4 %></div>
			</div>
			<div style="clear:both" class="body-sm-weak text-strong">Expires <%= cardExpiryDisplay(primaryCardPaymentMethod.expMonth, primaryCardPaymentMethod.expYear) %></div>
		</div>
		<% } %>

		<a href="#" class="btn bg-black text-white" id="addPaymentMethodBtn">Add payment method</a>
	</div>
</div>

<!-- Payment type modal -->
<div class="modal" id="paymentTypeModal" tabindex="-1" aria-labelledby="addPaymentMethodBtn">
	<div class="modal-dialog modal-lg modal-dialog-centered">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title heading-xl-medium">Payment type</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body p-4 py-5">
				<div class="d-flex">
					<a class="selection rounded bg-white p-4 mb-2 text-decoration-none text-strong heading-sm-weak me-2" id="addCardBtn" href="#">
						Credit/Debit card
						<svg><use href="/images/ui/icons.svg#credit-card"></use></svg>
					</a>
			
					<a class="selection rounded bg-white p-4 mb-2 text-decoration-none text-strong heading-sm-weak ms-2" href="javascript:alert('Not implemented.')">
						Cryptocurrency
						<svg><use href="/images/ui/icons.svg#bitcoin"></use></svg>
					</a>
				</div>
			</div>
		</div>
	</div>
</div>

<%- include('../_add-card-modal.ejs') %>

<!-- Change payment method modal -->
<div class="modal" id="changePaymentMethodModal" tabindex="-1">
	<div class="modal-dialog modal-lg modal-dialog-centered">
		<div class="modal-content">
			<form method="post" action="/dashboard/payments/set-primary-method" id="changePaymentMethodForm">
				<div class="modal-header">
					<h5 class="modal-title heading-xl-medium">Your saved payment methods</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body p-4 py-5">
					<% cardPaymentMethods.forEach(function(paymentMethod, i) { %>
						<div class="payment-method-option form-check py-3">
							<input type="radio" class="form-check-input" id="paymentMethod_<%= paymentMethod.id %>" name="id" value="<%= paymentMethod.id %>" <%= paymentMethod.id == primaryCardPaymentMethod.id ? 'checked' : ''%> />
							<label class="form-check-label" for="paymentMethod_<%= paymentMethod.id %>">
								<div class="d-inline-block rounded border position-relative" style="width:40px;height:24px;overflow:hidden;vertical-align:bottom;">
									<svg width="24" height="24" style="position:absolute;top:-1px;left:8px;"><use href="/images/ui/credit-card-icons.svg#<%= paymentMethod.cardType %>"></use></svg>
								</div>
								<b class="body-sm-medium me-2"><%= paymentMethod.last4 %></b>
								<span>Expires: <%= cardExpiryDisplay(paymentMethod.expMonth, paymentMethod.expYear) %></span>
							</label>
							<% if(paymentMethod.id != primaryCardPaymentMethod.id) { %>
							<a href="#" class="float-end" data-remove-id="<%= paymentMethod.id %>">Remove</a>
							<% } %>
						</div>
					<% }) %>
				</div>
				<div class="modal-footer">
					<a class="btn btn-outline-dark heading-md-medium" href="javascript:;" data-bs-dismiss="modal">Cancel</a>
					<button class="btn bg-black text-white heading-md-medium" id="savePrimaryPaymentMethodBtn">Use this method</button>
				</div>
			</form>
		</div>
	</div>
</div>

<%- contentFor('aside') %>
<svg width="48" height="48" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
	<path fill-rule="evenodd" clip-rule="evenodd" d="M14 28C16.2091 28 18 26.2091 18 24C18 21.7909 16.2091 20 14 20C11.7909 20 10 21.7909 10 24C10 26.2091 11.7909 28 14 28ZM20.9297 20C19.5465 17.6088 16.9611 16 14 16C10.2723 16 7.14012 18.5495 6.25204 22H4C2.89543 22 2 22.8954 2 24C2 25.1046 2.89543 26 4 26H6.25204C7.14012 29.4505 10.2723 32 14 32C18.4183 32 22 28.4183 22 24H26C26 28.4183 29.5817 32 34 32C37.7277 32 40.8599 29.4505 41.748 26H44C45.1046 26 46 25.1046 46 24C46 22.8954 45.1046 22 44 22H41.748C40.8599 18.5495 37.7277 16 34 16C31.0389 16 28.4535 17.6088 27.0703 20H20.9297ZM30 24C30 26.2091 31.7909 28 34 28C36.2091 28 38 26.2091 38 24C38 21.7909 36.2091 20 34 20C31.7909 20 30 21.7909 30 24Z" fill="#1D1D23"/>
</svg>
	
<h3 class="heading-lg-medium text-strong">What do we do with your information?</h3>
<p class="body-sm-weak text-medium">Gravida ut varius feugiat viverra. Ipsum, dis aenean quisque vel amet eget. Faucibus potenti consectetur duis id habitant nunc, elementum, fringilla vitae.</p>

<style>
	a.selection {
		transition: box-shadow .1s, color .1s;
		flex-grow: 1;
		outline: 1px solid var(--bs-gray-300);
	}

	a.selection svg {
		height: 24px;
		width: 24px;
		float: right;
	}
	
	a.selection:hover {
		outline-color: var(--bs-primary) !important;
		outline-width: 2px;
		box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.12) !important;
	}
</style>

<script>
	var addPaymentMethodBtn = document.getElementById('addPaymentMethodBtn');
	var paymentTypeModal = new bootstrap.Modal(document.getElementById('paymentTypeModal'));
	addPaymentMethodBtn.addEventListener('click', function(e) {
		e.preventDefault();
		paymentTypeModal.show();
	});

	var addCardBtn = document.getElementById('addCardBtn');
	var addCardModal = new bootstrap.Modal(document.getElementById('addCardModal'));
	var addCardForm = document.getElementById('addCardForm');
	var stripeErrorMessage = document.getElementById('stripeErrorMessage');
	var addCardModalShown = false;

	// Prepare Stripe ahead of time
	const stripe = Stripe('<%= stripePublicKey %>');
	var stripeElements;
	fetch('/dashboard/payments/beginAddCreditCard', { method: 'post' })
		.then(function(response) {
			response.json().then(function(json) {
				var secret = json.clientSecret;

				// Set up credit card form
				const options = {
					clientSecret: secret,
					fonts: [
						{ cssSrc: 'https://fonts.googleapis.com/css2?family=Rubik:wght@400' }
					],
					appearance: {
						variables: {
							fontFamily: 'Rubik, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Liberation Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"',
							fontSizeBase: '16px',
							colorPrimary: '#555af7',
							colorText: '#212529',
							spacingGridRow: '24px'
						},
						rules: {
							'.Input': {
								borderColor: '#ced4da',
								lineHeight: '1.25',
								padding: '8px',
								boxShadow: 'none'
							},
							'.Input:focus': {
								boxShadow: '0 0 0 0.25rem rgba(85,90,247,0.25)'
							},
							'.Label--resting': {
								color: '#717171'
							}
						},
						labels: 'floating',
					}
				};
				
				stripeElements = stripe.elements(options);
				const paymentElement = stripeElements.create('payment', { business: { name: 'Pluribus' }});

				// Stripe will not be able to compute styles for floating labels correctly when the modal is not displayed
				// So we display it temporarily (while hidden) to allow Stripe to compute layout, then hide it again.
				// We need to wait a while for Stripe to 'mount', so we wait 1s before resetting modal back to normal. 
				addCardModal._element.style.visibility = 'hidden';
				addCardModal._element.style.display = 'block';
				
				paymentElement.mount('#stripePaymentElement');
				setTimeout(function() {
					// We don't want to hide the modal if it has been opened in the time elapsed since we
					// started waiting for stripe to mount.
					if(!addCardModalShown) {
						addCardModal._element.style.display = null;
					}
					addCardModal._element.style.visibility = null;
				}, 1000);

				paymentElement.on('change', () => stripeErrorMessage.classList.add('visually-hidden') );
				
			});
		});

	

	addCardBtn.addEventListener('click', function(e) {
		e.preventDefault();
		paymentTypeModal.hide();
		addCardModal.show();	
		addCardModalShown = true;	
	});

	addCardForm.addEventListener('submit', async function(event) {
		event.preventDefault();

		var nickname = document.getElementById('cardNickname').value;
		var firstName = document.getElementById('cardFirstName').value;
		var lastName = document.getElementById('cardLastName').value;

		// Validate our fields first
		if(!addCardForm.checkValidity()) {
			addCardForm.classList.add('was-validated');
			return;
		}

		var protocol = "<%= req.app.get('env') == 'production' ? 'https' : 'http' %>";
		const {error} = await stripe.confirmSetup({
			elements: stripeElements,
			confirmParams: {
				return_url: '<%= `${protocol}://${req.headers.host}/dashboard/payments/card-added` %>',
				payment_method_data: {
					metadata: {
						nickname,
						firstName,
						lastName
					}
				}
			}
		})

		if(error) { 
			stripeErrorMessage.textContent = error.message;
			stripeErrorMessage.classList.remove('visually-hidden');
		}
	});

	// We need to do this rather than just use [data-bs-dismiss="modal"] because
	// the button is inside a form and we need to prevent the form submitting.
	var cancelAddCardBtn = document.getElementById('cancelAddCardBtn');
	cancelAddCardBtn.addEventListener('click', e => {
		e.preventDefault();
		addCardModal.hide();
	})

	// Change payment method modal
	var changePaymentMethodModal = new bootstrap.Modal(document.getElementById('changePaymentMethodModal'));
	var changePaymentMethodBtn = document.getElementById('changePaymentMethodBtn');
	var changePaymentMethodForm = document.getElementById('changePaymentMethodForm');
	if(changePaymentMethodBtn) {
		changePaymentMethodBtn.addEventListener('click', function(e) {
			e.preventDefault();
			changePaymentMethodForm.reset(); // in case modal has been shown, selection changed and then modal closed
			changePaymentMethodModal.show();
		});
	}

	// Remove payment method links
	var removeCardLinks = document.querySelectorAll('[data-remove-id]');
	removeCardLinks.forEach(function(removeCardLink) {
		removeCardLink.addEventListener('click', function(e) {
			e.preventDefault();
			if(!confirm('Really remove this payment method?')) {
				return;
			}
			var id = removeCardLink.dataset.removeId;
			var container = removeCardLink.closest('div');
			container.style.transition = 'opacity 200ms';
			container.style.opacity = '0';
			var abortRemove = false;
			setTimeout(function() {
				if(!abortRemove) {
					container.style.display = 'none';
				}
			}, 200);
			fetch('/dashboard/payments/delete-payment-method', {
				method: 'post',
				headers: { 'content-type': 'application/x-www-form-urlencoded'},
				body: 'id=' + id 
			})
				.then(function(res) {
					if(res.status == 400) {
						abortRemove = true;
						container.style.transition = '';
						container.style.opacity = 1;
						container.style.display = '';
						res.json().then(function(json) {
							alert(json.error);
						});
						return;
					}
					container.remove();
				});
		});
	});

	var connectStripeAccountBtn = document.getElementById('connectStripeAccountBtn');
	if(connectStripeAccountBtn) {
		connectStripeAccountBtn.addEventListener('click', function() {
			setTimeout(function() {
				document.body.classList.add('page-loading');
				connectStripeAccountBtn.text = 'Please wait...';
			}, 1)
		})
	}


</script>

<style>
	.payment-method-option:not(:last-of-type) {
		border-bottom: 1px solid var(--bs-gray-300);
	}
</style>