<% 
	_locals.title = 'Dashboard';
	_locals.nav = 'home';
%> 
<style>
	.execution figure {
		width: 80px;
		height: 80px;
		margin-right: 16px;
		overflow: hidden;
	}
	.creator-link::after, .guild-link::after {
		font-size: var(--heading-sm);
		color: var(--text-medium);
		vertical-align: sub;
		font-size: 75%;
	}
	.creator-link::after{ content: ' x'; }
	.guild-link::after{ content: ' +';}
</style>
<header>
	<h1 class="display-xxs">Home</h1>
</header>

<div class="card">
	<div class="card-body">
	<% if(executed && executed.length) { %>
		<% executed.forEach(execution => { %>
			<div class="execution card mb-3">
				<div class="card-body">
					<div>
						<div class="d-flex">
							<figure class="border rounded-circle">
								<img src="<%= execution.PolicyExecution.Creator.photo != null ? ('/images/uploads/creators/' + execution.PolicyExecution.Creator.id + '/' + execution.PolicyExecution.Creator.photo) : '/images/ui/avatar-unknown.svg' %>" />
							</figure>
							<div>
								<div>
									<span class="text-primary heading-sm-medium"><%= execution.PolicyExecution.Creator.name %></span>
									pledge activation
								</div>
								<div class="heading-xs-weak text-medium">
									Activated <%= when(execution.PolicyExecution.executedAt) %>.
								</div>
							</div>
						</div>
						<blockquote class="text-strong">
							"<%= execution.PolicyExecution.reason %>"
						</blockquote>
					</div>
				</div><!-- .card-body -->
				<div class="card-footer">
					<% if (execution.respondedAt) { %>
						<div class="text-strong">
							Your vote: <%= execution.agree ? 'Agreed' : 'Disagreed' %>
						</div>
						<div class="text-medium">
							Voting ends <%= when(execution.PolicyExecution.expiresAt) %>
						</div>
					<% } else { %>
						<div>Does this meet the criteria you agreed to when you donated?</div>
						<div>
							<button onclick="handleVote(<%= execution.PolicyExecution.id %>, false)" class="btn btn-outline px-4 me-2">No</button>
							<button onclick="handleVote(<%= execution.PolicyExecution.id %>, true)" class="btn btn-primary px-4">Yes</button>
						</div>
					<% } %>
				</div>
			</div>
		<% }) %>
	<% } %>

	<%- include('_subscribe-alert', { subscribable: creator, subscribeUrl: '/dashboard/subscribe' }) %>
	<%- include('_subscribe-alert', { subscribable: guild, subscribeUrl: '/dashboard/guild-subscribe' }) %>

	<% const links = [];
		if (following) following.forEach(follow => links.push({ href: '/creators/' + follow.creatorId, text: follow.Creator.name, class: 'creator-link' }));
		if (guildFollowing) guildFollowing.forEach(follow => links.push({ href: '/guilds/' + follow.guildId, text: follow.Guild.name, class: 'guild-link' }));
		links.sort((a, b) => a.text.localeCompare(b.text));
		if(links.length) { %>
		<h3>Following</h3>
		<ul>
		<% for(const follow of links) { %>
			<li><a href="<%= follow.href %>" class="<%= follow.class %>"><%= follow.text %></a></li>
		<% } %>
		</ul>
	<% } else { %>
		<p>You're not following anyone yet. Followed creators will show up here once you do.</p>
	<% } %>

	<% if(!authUser.roles.includes('creator')) { %>
		<div class="alert alert-info">
			Are you a creator too? 
			<a href="/creators/new" class="">Set up a creator profile</a>
		</div>
	<% } %>
	</div>
</div>

<%- contentFor('aside') %>

<script>
async function handleVote(executionId, vote) {
	const btn = event.target;
	const card = btn.closest('.execution');
	const btns = card.querySelectorAll('button');
	
	try {
		console.log('Vote value:', vote);  // true for Yes, false for No
		const response = await fetch(`/dashboard/policy-execution-response/${executionId}`, {
			method: 'POST',
			headers: { 
				'Content-Type': 'application/json'
			},
			body: JSON.stringify({ response: vote ? 'agree' : 'disagree' })
		});
		
		const result = await response.json();
		console.log('Server response:', result);  // See what the server sends back
		
		if (result.status === 'success' || result.status === 'already-voted') {
			// Disable buttons
			btns.forEach(b => b.disabled = true);
			
			// Show message
			const msg = document.createElement('div');
			msg.className = 'alert alert-info mt-3';
			msg.textContent = result.message;
			card.appendChild(msg);
		}
	} catch (err) {
		console.error(err);
		alert('Error recording vote');
	}
}
</script>
