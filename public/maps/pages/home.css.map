{"version":3,"sources":["pages/home.scss","config/_mixins.scss","config/_typography.scss","config/_design-token.scss","config/_color-system.scss","config/_lib-placeholder-selectors.scss"],"names":[],"mappings":"AAAA;AAAA;AAAA;AAAA;ACAA;ACoBA;EACE,OCLsB;EDMtB;;AAEA;EACE,OCjBM;;;AFkEF;ECtBN;IACE;;;AAKJ;EAEE;EACA;;;ADZM;ECiBJ;IACE;;EAGF;IACE;;EAGF;IACE;;EAGF;IACE;;EAGF;IACE;;EAGF;IACE;;;AD5BE;ECoCJ;IACE;;EAGF;IACE;;EAGF;IACE;;EAGF;IACE;;EAGF;IACE;;EAGF;IACE;;;AEpHN;EACE,kBD+Ba;;;AC5Bf;EACE,kBD2Ba;;ACzBb;EACE,kBDyBiB;;ACvBnB;EACE,kBDuBgB;;;ACnBpB;EACE;;;AAEF;EACE,ODFsB;;;ACIxB;EACE,ODJsB;;;ACMxB;EACE,ODrBM;;;ACuBR;EACE,ODRsB;;;ACUxB;EACE,ODVsB;;;ACYxB;EACE,ODZsB;;;AEjBxB;EACE;EACA;EACA,OFJM;;;AEOR;EACE,kBFqBmB;EEpBnB,OFGsB;;;AEAxB;EACE,kBFTQ;EEUR,OFdM;;;AEkBR;EACE;;;AAGF;EACE;;;AAGF;EACE;;;AAiCA;EACE;EACA;;;AAEF;EACE;EACA;;;AAMF;EACE;EACA;;;AAEF;EACE;EACA;;;AAEF;EACE;EACA;;;AAtBF;EACE;EACA;;;AAEF;EACE;EACA;;;AAMF;EACE;EACA;;;AAEF;EACE;EACA;;;AAEF;EACE;EACA;;;AAtBF;EACE;EACA;;;AAEF;EACE;EACA;;;AAMF;EACE;EACA;;;AAEF;EACE;EACA;;;AAEF;EACE;EACA;;;AAtBF;EACE;EACA;;;AAEF;EACE;EACA;;;AAMF;EACE;EACA;;;AAEF;EACE;EACA;;;AAEF;EACE;EACA;;;AAtBF;EACE;EACA;;;AAEF;EACE;EACA;;;AAMF;EACE;EACA;;;AAEF;EACE;EACA;;;AAEF;EACE;EACA;;;AAiBJ;EACE;;;AL3FF;EACE,kBGVM;;;AHaR;EACE;EACA;;;AAGF;EACE;EACA;;;AAIA;EACE;EACA;EACA;EACA;EACA;EACA;;AAGF;EACE;;;AAIJ;EACE;EACA;EACA;;;ACcM;EDTJ;IACE;IACA;;;AAMN;EACE;EACA;;AAEA;EACE;;;ACJI;EDSN;IACE;IACA;;EAEA;IACE;;;AAMN;EACE;EACA;EACA;EACA;EACA;EACA;;AAEA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA;EACE;EACA;EACA;;AAGF;EAGE;EACA;EACA;EACA;EACA;EACA,eApGI;EAqGJ;EACA;;;ACvCE;ED6CN;IACE;IACA;;EAEA;IACE;IACA;;EAEA;IACE;IACA;;;AAQN;EACE;;;AAKF;EACE;;;AAIJ;EACE,KG/BkB;EHgClB;;AAEA;EACE;EACA;EACA;EACA;EACA;EACA;;;AAMJ;EACE;;;AAIA;EACE;EACA;;AAGF;EACE;EACA;;;AAKF;EACE;;AAGF;EACE;EACA;;AAGF;EACE;;;AAKF;EACE,eA1LM;EA2LN;;;AAKF;EACE;EACA;;AAGF;EACE;EACA;;AAGF;EACE;;;AAOF;EACE;;AAGF;EACE;EACA,KG7GgB;;;AHkHlB;EACE;;AAEA;EACE;;AAIJ;EACE;;AAGF;EACE;;AAGF;EACE;EACA","file":"../../scss/pages/home.css","sourcesContent":["/**\n * CSS Compiled on: 2022-06-25 18:32:47 -07:00\n * ============================================================================== *\n */\n\n@import \"../config/mixins.scss\";\n@import \"../config/design-token\";\n@import \"../config/typography\";\n@import \"../config/color-system\";\n@import \"../config/lib-placeholder-selectors\";\n\n$corners: 17px;\n\nbody {\n  background-color: $white;\n}\n\nh1.display-1 {\n  max-width: 1000px;\n  margin-bottom: beat(8);\n}\n\n.promo-block {\n  padding-top: beat(16);\n  padding-bottom: beat(16);\n}\n\n.btn-arrow {\n  &::after {\n    background: url(\"/images/ui/icon-arrow.svg\") center left no-repeat;\n    content: '';\n    display: inline-block;\n    height: 10px;\n    width: 1.1rem;\n    margin-left: .65em;\n  }\n\n  &:hover::after {\n    background-position: center right;\n  }\n}\n\n.quote-ext {\n  text-indent: -.5em;\n  margin-left: -.5em;\n  padding-left: .5em;\n}\n\n@include responsive(xs) {\n  .jt-layout {\n    .btn {\n      width: 100%;\n      font-size: 2rem;\n    }\n  }\n}\n\n\n.graphic-content {\n  display: flex;\n  flex-wrap: wrap;\n\n  & > * {\n    flex: 1;\n  }\n}\n\n@include responsive(xs) {\n  .graphic-content {\n    flex-wrap: nowrap;\n    flex-direction: column;\n\n    & > figure {\n      order: -1;\n    }\n  }\n}\n\n\n.how-grid {\n  display: grid;\n  display: none;\n  grid-template-columns: 1fr 2fr;\n  grid-template-rows: auto;\n  grid-template-areas: '. content';\n  padding: beat(16) 0;\n\n  .inner-content {\n    border-radius: $corners 0 0 $corners;\n    grid-area: content;\n    height: 400px;\n    padding: beat(4) 15px beat(4) 100px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    position: relative;\n\n    & > * {\n      width: 100%;\n      max-width: 500px;\n      margin: 0 auto;\n    }\n\n    &::after {\n      @extend %primary-space;\n\n      content: '';\n      height: 250px;\n      width: 250px;\n      position: absolute;\n      left: -200px;\n      border-radius: $corners;\n      background-image: url(\"/images/content/symbols/How.png\");\n      background-size: contain;\n    }\n  }\n}\n\n@include responsive(xxs) {\n  .how-grid {\n    display: block;\n    padding: 0;\n\n    .inner-content {\n      border-radius: 0;\n      padding: beat(8);\n\n      &::after {\n        position: static;\n        margin: 1.5rem auto;\n      }\n    }\n  }\n}\n\n\n.cards-3 {\n  & > * {\n    flex: 1;\n  }\n}\n\n.columns {\n  & + & {\n    margin-top: beat(4);\n  }\n}\n\n.graphic-content {\n  gap: $grid-gutter-width;\n  align-items: stretch;\n\n  &::after {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    background: url(\"../../images/content/symbols/networked.png\") no-repeat center;\n    background-size: 100%;\n    content: '';\n  }\n}\n\n// Vignettes\n\n.jumbotron {\n  padding: beat(16) 0;\n}\n\n.prepared {\n  small {\n    display: block;\n    margin-bottom: beat(4);\n  }\n\n  .content-holder p {\n    max-width: 650px;\n    margin: 0 auto beat(8);\n  }\n}\n\n.numbers {\n  .columns {\n    align-items: center;\n  }\n\n  figure {\n    padding: 3rem;\n    border-radius: 16px;\n  }\n\n  .content-holder > * {\n    max-width: 588px;\n  }\n}\n\n.networked {\n  .wrapper {\n    border-radius: $corners;\n    padding: beat(8) ($grid-gutter-width * 2);\n  }\n}\n\n.tyranny {\n  .section-head {\n    flex: 1;\n    max-width: 400px;\n  }\n\n  .content-holder {\n    flex: 2;\n    max-width: 600px;\n  }\n\n  figcaption {\n    margin: beat(2) 0 beat(6);\n  }\n}\n\n.join-us {\n  h2 {}\n\n  .columns {\n    align-items: center;\n  }\n\n  .btn-holder {\n    display: flex;\n    gap: $grid-gutter-width;\n  }\n}\n\n.newsletter {\n  .columns {\n    align-items: center;\n\n    & > * {\n      flex: 1;\n    }\n  }\n\n  .content-holder {\n    max-width: 550px;\n  }\n\n  .form-holder {\n    max-width: 480px;\n  }\n\n  .btn {\n    white-space: nowrap;\n    flex: 0;\n  }\n}","/*  4. Custom Mixins  */\n// scss-docs-start grid-breakpoints\n$grid-breakpoints: (\n  xs: 0,\n  sm: 576px,\n  md: 768px,\n  lg: 992px,\n  xl: 1200px,\n  xxl: 1400px\n) !default;\n\n// Responsive breakpoint generation\n$screen-lg:         map-get($grid-breakpoints, xl);\n$screen-md-max:     map-get($grid-breakpoints, lg) - 1px;\n$screen-md:         map-get($grid-breakpoints, lg);\n$screen-sm-max:     map-get($grid-breakpoints, md) - 1px;\n$screen-sm:         map-get($grid-breakpoints, md);\n$screen-xs-max:     map-get($grid-breakpoints, md) - 1px;\n$screen-xs:         map-get($grid-breakpoints, sm);\n\n\n@mixin responsive ($width) {\n    // Only 1200px and larger\n    @if $width == lg {\n        @media only screen and (min-width: $screen-lg)\n        {@content}\n    }\n    // 1199px and less\n    @else if $width == md {\n        @media only screen and (max-width: $screen-md-max)\n        {@content}\n    }\n    // 992px and up\n    @else if $width == md-up {\n        @media only screen and (min-width: $screen-md)\n        {@content}\n    }\n    // Only between 992px and 1199px\n    @else if $width == md-only {\n        @media only screen and (min-width: $screen-md) and (max-width: $screen-md-max)\n        {@content}\n    }\n    // 991px and less\n    @else if $width == sm {\n        @media only screen and (max-width: $screen-sm-max)\n        {@content}\n    }\n    // 768px and up\n    @else if $width == sm-up {\n        @media only screen and (min-width: $screen-sm)\n        {@content}\n    }\n    // Only between 768px and 991px\n    @else if $width == sm-only {\n        @media only screen and (min-width: $screen-sm) and (max-width: $screen-sm-max)\n        {@content}\n    }\n    // 767px and less\n    @else if $width == xs {\n        @media only screen and (max-width: $screen-xs-max)\n        {@content}\n    }\n    // 576px and up\n    @else if $width == xs-up {\n        @media only screen and (min-width: $screen-xs)\n        {@content}\n    }\n    // Only between 576px and 767px\n    @else if $width == xs-only {\n        @media only screen and (min-width: $screen-xs) and (max-width: $screen-xs-max)\n        {@content}\n    }\n    // 575px and less\n    @else if $width == xxs {\n        @media only screen and (max-width: $screen-xs - 1)\n        {@content}\n    }\n}\n@mixin print-screen () {\n    @media only print\n    {@content}\n}\n\n\n@function map-deep-get($map, $keys...) {\n  // @warn $map;\n  // @warn $keys;\n    @each $key in $keys {\n        $map: map-get($map, $key);\n    }\n    @return $map;\n}\n\n@function tint($color, $percentage) {\n  @return mix($white, $color, $percentage);\n}\n\n@function shade($color, $percentage) {\n  @return mix($black, $color, $percentage);\n}\n\n@function set-text-color($color) {\n  @if lightness($color) > 50 {\n    @return $black; // Lighter backgorund, return dark color\n  } @else {\n    @return $white; // Darker background, return light color\n  }\n}\n\n@function set-color-map($base) {\n  $colorMap: ();\n  $setMap: ();\n\n  @for $i from 10 through 1 {\n    $keyVal: $i * 9.5; // Alters color tint distribution\n    $keyValName: $i * 10;\n    $setMap: (l-#{$keyValName}: tint($base, $keyVal));\n    $colorMap: map-merge($colorMap, $setMap);\n  }\n\n  $baseMap: (base: $base);\n  $colorMap: map-merge($colorMap, $baseMap);\n\n  @for $i from 1 through 10 {\n    $keyVal: $i * 8; // Alters color shade distribution\n    $keyValName: $i * 10;\n    $setMap: (d-#{$keyValName}: shade($base, $keyVal));\n    $colorMap: map-merge($colorMap, $setMap);\n  }\n\n  @return $colorMap;\n}\n\n@mixin comp-colors-solid($state--color) {\n  $my-map: map-get($palette, $state--color);\n  $my-var: --#{$state--color};\n  background-color: map-get($my-map, 'd-20');\n  background-color: var(#{$my-var}-bg, #{map-get($my-map, 'd-20')});\n  color: set-text-color(map-get($my-map, 'd-20'));\n  color: var(#{$my-var}-solidtext, #{set-text-color(map-get($my-map, 'd-20'))});\n}\n\n@mixin comp-colors-outline($state--color) {\n  $my-map: map-get($palette, $state--color);\n  $my-var: --#{$state--color};\n  background-color: map-get($my-map, 'l-100');\n  background-color: var(#{$my-var}-bglt, #{map-get($my-map, 'l-100')});\n  border-color: map-get($my-map, 'l-100');\n  border-color: var(#{$my-var}-border, #{map-get($my-map, 'l-100')});\n  color: map-get($my-map, 'd-70');\n  color: var(#{$my-var}-text, #{map-get($my-map, 'd-70')});\n}\n\n\n\n@function beat($beats: 4) {\n  @return $line-height / 4 * $beats * 1rem;\n}\n\n@mixin underliner($pad: 1, $mar: 0, $col: $comp-border) {\n  border-bottom: 1px solid $col;\n  padding-bottom: calc(#{beat($pad)} - 1px);\n\n  @if $mar != 0 {\n    margin-bottom: beat($mar);  \n  }\n}\n\n// Set FontAwesome\n@mixin set-fa($fa-char: '024', $placement: 'before', $weight: 700) {\n\n\n  &::#{$placement} {\n    font-family: 'FontAwesome';\n    content: #{'\"\\\\f' + $fa-char + '\"'};\n    margin-right: 0.35em;\n    font-weight: $weight;\n\n    @if $placement == 'after' {\n      margin-left: 0.75rem;\n      margin-right: 0;\n    }\n\n    @if $fa-char == '024' {\n      color: red;\n    }\n  }\n}\n\n\n@mixin mlGradient($topColor: $gradTop, $bottomColor: $gradBottom) {\n    @include background-image(linear-gradient($topColor, $bottomColor));\n};\n\n\n@mixin card-shadow() {\n    box-shadow: 0 1px 2px #aaa;  // Google Cards\n}\n\n//  For development only\n@mixin shaded($color: 156, $opacity: 0.5) {\n  background-color: rgba($color, $color, $color, $opacity);\n};\n\n@mixin bgOverlay($brightness,$amount) {\n    background-image: url(\"../../images/ui/bg_\" + $brightness + $amount + \".png\");\n}\n\n\n//\n// map-fetch($map, $keys)\n//\n// An easy way to fetch a deep value in a multi-level map. Works much like\n// map-get() except that you pass multiple keys as the second parameter to\n// go down multiple levels in the nested map.\n//\n// Credit: J W Long\n// URL:    https://gist.github.com/jlong/8760275\n//\n\n@function map-fetch($map, $keys) {\n  $key: nth($keys, 1);\n  $length: length($keys);\n  $value: map-get($map, $key);\n  @if ($length > 1) {\n    $rest: ();\n    @for $i from 2 through $length {\n      $rest: append($rest, nth($keys, $i))\n    }\n    @return map-fetch($value, $rest)\n  } @else {\n    @return $value;\n  }\n}\n\n\n//\n//  Bootstrap Adjustments\n//\n\n@mixin strap-stretch() {\n    margin-left: $el-pad * -1;\n    margin-right: $el-pad * -1;\n    padding-left: $el-pad;\n    padding-right: $el-pad;\n}\n\n@mixin adjust-multicol($label-width, $measure-unit, $data-width: null) {\n    @include responsive(xs){\n        @if $measure-unit == \"em\" {\n            $label-width: 1em * $label-width;\n            td[class*=\"col-\"] {\n                @include adjust-font-size-to($nrw-large-type,4);\n                margin-left: $label-width + 1em;\n                @if $data-width != null {\n                    width: $data-width * 1em;\n                }\n            }\n        }\n        @else if $measure-unit == \"pct\" {\n            $label-width: 1% * $label-width;\n            td[class*=\"col-\"] {\n                margin-left: $label-width + 4%;\n            }\n        }\n        @else if $measure-unit == \"px\" {\n            $label-width: 1px * $label-width;\n            td[class*=\"col-\"] {\n                margin-left: $label-width + $el-pad;\n            }\n        }\n        td[class*=\"col-\"]:first-child {\n            width: auto;\n            margin-left: $el-pad * -1;\n        }\n        div.micro-th {\n            width: $label-width;\n        }\n    };\n}\n\n@mixin labler($wid) {\n\n    & > *:nth-child(odd){\n      flex: 0 0 ($wid * 1rem);\n      box-sizing: border-box;\n    }\n\n    & > *:nth-child(even) {\n      // flex: 0 0 calc((100%) - (#{($wid * 1rem)}) - (#{($table-sides * 3)}));\n      flex: 0 0 calc((100%) - (#{($wid * 1rem)}));\n      box-sizing: border-box;\n    }\n\n   @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {  \n    /* IE10+ specific styles go here */  \n    & > *:nth-child(even) {\n      flex-basis: calc((100%) - (#{($wid * 1rem) + 2rem}));\n    }\n  }\n\n   @media screen and (max-width: $screen-xs-max) and (-ms-high-contrast: active), (-ms-high-contrast: none) {  \n    /* IE10+ specific styles go here */  \n    & > *:nth-child(even) {\n      flex-basis: calc((100%) - (#{($wid * 1rem) + 2.5rem}));\n    }\n  }\n}\n","h1, .h1, *[class~='heading-xl'] {\n  @extend %heading-xl-medium;\n}\n\nh2, .h2, *[class~='heading-lg'] {\n  @extend %heading-lg-medium;\n}\n\nh3, .h3, *[class~='heading-md'] {\n  @extend %heading-md-medium;\n}\n\nh4, .h4, *[class~='heading-sm'] {\n  @extend %heading-sm-medium;\n}\n\nh5, .h5, *[class~='heading-xs'] {\n  @extend %heading-xs-medium;\n}\n\na {\n  color: $text-strong;\n  font-weight: 500;\n\n  &:hover {\n    color: $text-primary;\n  }\n}\n\n@each $size-name, $scale-step in $desktop-type-map {\n  .body-#{$size-name}-weak {\n    @extend %body-#{$size-name}-weak;\n  }\n\n  .body-#{$size-name}-medium {\n    @extend %body-#{$size-name}-medium;\n  }\n\n  .heading-#{$size-name}-weak {\n    @extend %heading-#{$size-name}-weak;\n  }\n\n  .heading-#{$size-name}-medium {\n    @extend %heading-#{$size-name}-medium;\n  }\n\n  .heading-#{$size-name}-strong {\n    @extend %heading-#{$size-name}-strong;\n  }\n}\n\n@include responsive(xxs) {\n  html {\n    font-size: 10px;\n  }\n}\n\n\n*[class*=\"display\"] {\n  // font-family: $headings-font-family;\n  font-weight: 500;\n  line-height: 1.3 !important;\n}\n\n@include responsive(sm-up) {\n  .display {\n    &-xl {\n      font-size: map-get($display-font-sizes, 1);\n    }\n\n    &-lg {\n      font-size: map-get($display-font-sizes, 2);\n    }\n\n    &-md {\n      font-size: map-get($display-font-sizes, 3);\n    }\n\n    &-sm {\n      font-size: map-get($display-font-sizes, 4);\n    }\n\n    &-xs {\n      font-size: map-get($display-font-sizes, 5);\n    }\n\n    &-xxs {\n      font-size: map-get($display-font-sizes, 6);\n    }\n  }\n}\n\n\n@include responsive(xs) {\n  *[class^='display-'] {\n    &[class$='xl'] {\n      font-size: 3.8rem;\n    }\n\n    &[class$='lg'] {\n      font-size: 3.4rem;\n    }\n\n    &[class$='md'] {\n      font-size: 3.0rem;\n    }\n\n    &[class$='sm'] {\n      font-size: 2.6rem;\n    }\n\n    &[class$='xs'] {\n      font-size: 2.4rem;\n    }\n\n    &[class$='xxs'] {\n      font-size: 2.2rem;\n    }\n  }\n}\n","// \n// Color Variables\n// \n\n$white: #fff;\n$black: #000;\n$clear: transparent;\n\n$primary: hsl(238, 91%, 65%);\n$secondary: #00CCBE;\n$success: #017b00;\n$info: #007db1;\n$warning: #cc0000;\n$danger: #ee453d;\n\n// Text Coloring\n$text-strong:           #1d1d23;\n$text-medium:           #717171;\n$text-weak:             rgba(113, 113, 113, 0.3);\n$text-white:            $white;\n$text-neutral:          #f0f2f3;\n$text-neutral-light:    #f8f9fa;\n$text-neutral-dark:     #e1e3e4;\n\n$text-primary:          $primary;\n$text-secondary:        $secondary;\n$text-success:          $success;\n$text-info:             $info;\n$text-warning:          $warning;\n$text-danger:           $danger;\n\n// Fill Coloring\n$fill-neutral: #f0f2f3;\n$fill-neutral-light: #f8f9fa;\n$fill-neutral-dark: #e1e3e4;\n$fill-white: $white;\n$fill-black: #1D1D23;\n\n$fill-primary:          $primary;\n$fill-primary-light:    tint($primary, 25);\n$fill-primary-dark:     shade($primary, 25);\n\n$fill-secondary:        $secondary;\n$fill-secondary-light:  tint($secondary, 25);\n$fill-secondary-dark:   shade($secondary, 25);\n\n$fill-success-strong:   $success;\n$fill-success-weak:     tint($success, 95);\n$fill-info-strong:      $info;\n$fill-info-weak:        tint($info, 95);\n$fill-danger-strong:    $danger;\n$fill-danger-weak:      tint($danger, 95);\n$fill-warning-strong:   $warning;\n$fill-warning-weak:     tint($warning, 95);\n\n// Border Coloring\n$border-neutral:          #e0e0e0;\n$border-neutral-light:    #f8f9fa;\n$border-neutral-dark:     #bdbdbd;\n$border-white:            $white;\n$border-primary:          $primary;\n$border-secondary:        $secondary;\n$border-success:          $success;\n$border-info:             $info;\n$border-warning:          $warning;\n$border-danger:           $danger;\n\n// $border-radius-lg: 16px;\n// $border-radius-sm: 4px;\n\n// Shadows: box-shadow property\n$shadow: (\n  small: 0px 2px 0px rgba(0, 0, 0, 0.1),\n  medium: 0px 5px 10px rgba(0, 0, 0, 0.12),\n  large: 0px 20px 30px -10px rgba(0, 0, 0, 0.12)\n);\n\n// Bootstrap shadows\n$box-shadow: map-get($shadow,'medium');\n$box-shadow-sm: map-get($shadow,'small');\n$box-shadow-lg: map-get($shadow,'large');\n\n// \n// Type Variables\n// \n\n\n$font-family-sans-serif: Rubik, system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Liberation Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\" !default;\n$headings-font-family: Rubik, system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Liberation Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\" !default;\n$line-height: 1.5;\n\n$desktop-type-map: (\n  xl: 1.5, \n  lg: 1.25, \n  md: 1.125, \n  sm: 1, \n  xs: .9375\n);\n\n$mobile-type-map: (\n  xl: 2, \n  lg: 1.8, \n  md: 1.6, \n  sm: 1.5,\n  xs: 1.4\n);\n\n$display-font-sizes: (\n  1: 5.375rem,\n  2: 4rem,\n  3: 3.375rem,\n  4: 2.75rem,\n  5: 2.375rem,\n  6: 2rem\n) !default;\n\n// $link-color: $fill-primary-dark;\n\n$grid-gutter-width: 24px;\n$el-pad: $grid-gutter-width / 2;\n$table-sides: $el-pad / 2;\n\n// scss-docs-start navbar-theme-variables\n$navbar-dark-color:                 rgba($white, .65) !default;\n$navbar-dark-hover-color:           rgba($white, .80) !default;\n// $navbar-dark-active-color:          $white !default;\n// $navbar-dark-disabled-color:        rgba($white, .25) !default;\n// $navbar-dark-toggler-icon-bg:       url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'><path stroke='#{$navbar-dark-color}' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/></svg>\") !default;\n// $navbar-dark-toggler-border-color:  rgba($white, .1) !default;\n\n// $navbar-light-color:                rgba($black, .55) !default;\n// $navbar-light-hover-color:          rgba($black, .7) !default;\n// $navbar-light-active-color:         rgba($black, .9) !default;\n// $navbar-light-disabled-color:       rgba($black, .3) !default;\n// $navbar-light-toggler-icon-bg:      url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'><path stroke='#{$navbar-light-color}' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/></svg>\") !default;\n// $navbar-light-toggler-border-color: rgba($black, .1) !default;\n\n// $navbar-light-brand-color:                $navbar-light-active-color !default;\n// $navbar-light-brand-hover-color:          $navbar-light-active-color !default;\n// $navbar-dark-brand-color:                 $navbar-dark-active-color !default;\n// $navbar-dark-brand-hover-color:           $navbar-dark-active-color !default;\n\n","body {\n  background-color: $fill-neutral;\n}\n\n.bg-neutral {\n  background-color: $fill-neutral;\n  \n  &.light {\n    background-color: $fill-neutral-light;\n  }\n  &.dark {\n    background-color: $fill-neutral-dark;\n  }\n}\n\n.text-strong {\n  color: $text-strong;       \n}       \n.text-medium {\n  color: $text-medium;       \n}       \n.text-weak {\n  color: $text-weak;         \n}         \n.text-white {\n  color: $text-white;        \n}        \n.text-neutral {\n  color: $text-neutral;      \n}      \n.text-neutral-light {\n  color: $text-neutral-light;\n}\n.text-neutral-dark {\n  color: $text-neutral-dark; \n} ","%light-space {\n  background-color: $fill-white;\n  color: $text-medium;\n}\n\n%dark-space {\n  --bs-bg-opacity: 1;\n  background-color: rgba(var(--bs-dark-rgb), var(--bs-bg-opacity));\n  color: $text-white;\n}\n\n%neutral-space {\n  background-color: $fill-neutral-light;\n  color: $text-strong;\n}\n\n%primary-space {\n  background-color: $fill-primary;\n  color: $text-white;\n}\n\n\n%shadow-small {\n  box-shadow: map-get($shadow, 'small');\n}\n\n%shadow-medium {\n  box-shadow: map-get($shadow, 'medium');\n}\n\n%shadow-large {\n  box-shadow: map-get($shadow, 'large');\n}\n\n%btn-outline {\n  background-color: var(--btn-outline-val-bg) !important;\n  border-color: var(--btn-outline-val);\n  color: var(--btn-outline-val);\n\n  &:hover {\n    background-color: var(--btn-outline-val-bg-hover) !important;\n    border-color: var(--btn-outline-val-hover);\n    color: var(--btn-outline-val-hover);\n  }\n}\n\n%btn-solid {\n  background-color: var(--btn-solid-val-bg) !important;\n  border-color: var(--btn-solid-val);\n  color: var(--btn-solid-val);\n\n  &:hover {\n    background-color: var(--btn-solid-val-bg-hover) !important;\n    border-color: var(--btn-solid-val-hover);\n    color: var(--btn-solid-val-hover);\n  }\n}\n\n\n\n@each $size-name, $scale-step in $desktop-type-map {\n  %body-#{$size-name} {\n    font-size: var(--body-#{$size-name});\n  }\n  %body-#{$size-name}-weak {\n    font-size: var(--body-#{$size-name});\n    font-weight: 400;\n  }\n  %body-#{$size-name}-medium {\n    font-size: var(--body-#{$size-name});\n    font-weight: 500;\n  }\n\n  %heading-#{$size-name} {\n    font-size: var(--heading-#{$size-name});\n  }\n  %heading-#{$size-name}-weak {\n    font-size: var(--heading-#{$size-name});\n    font-weight: 400;\n  }\n  %heading-#{$size-name}-medium {\n    font-size: var(--heading-#{$size-name});\n    font-weight: 500;\n  }\n  %heading-#{$size-name}-strong {\n    font-size: var(--heading-#{$size-name});\n    font-weight: 700;\n  }\n}\n\n\n.inverse {\n  @extend %dark-space;\n}\n\n.neutral {\n  @extend %neutral-space;\n}\n\n.primary-bg {\n  @extend %primary-space;\n}\n\n.shadow-small {\n  background-color: pink;\n  @extend %shadow-small;\n}\n.shadow-medium {\n  @extend %shadow-medium;\n}\n.shadow-large {\n  @extend %shadow-large;\n}\n\n"]}